> NETFOUNDRY.PLATFORM.NETFOUNDRY_SERVICE_ADVANCED    (/home/dsliwinski/.ansible/collections/ansible_collections/netfoundry/platform/plugins/modules/netfoundry_service_advanced.py)

        Create and update always have result=changed

OPTIONS (= is mandatory):

- attributes
        A list of service role attributes prefixed with a \#hash mark to be matched by an AppWAN
        [Default: (null)]
        type: list

= clientHosts
        the domain names and IPv4s to intercept

        type: list

= clientPorts
        port ranges to intercept e.g. ["80", "88:99"] as strings

        type: list

- clientProtocols
        the transport protocol to intercept. TCP is default.
        (Choices: tcp, udp)[Default: tcp]
        type: str

- edge_router_attributes
        A list of Router role attributes prefixed with a \#hash mark that may be used to access this service. Default is ["#all"].
        [Default: (null)]
        type: list

- encryptionRequired
        require edge-to-edge encryption (E2EE) from intercept or SDK to hosting endpoint
        [Default: True]
        type: bool

= endpoints
        a list of endpoint names, role attributes, or UUIDs to host this service

        type: list

= name
        the name of the service

        type: str

= network
        The dictionary describing the Network on which to operate from netfoundry_info.network.

        type: dict

- serverHosts
        optional list of domain names, IPv4, IPv6 of the server(s) reachable by the hosting endpoint. Default is client intercept address.
        [Default: (null)]
        type: list

- serverPorts
        listening ports of the server(s) reachable by the hosting endpoint. Default is client intercept port(s).
        [Default: (null)]
        type: list

- serverProtocols
        the transport protocol(s) expected by the server. Default is client intercept protocol(s).
        (Choices: tcp, udp)[Default: same as intercept]
        type: list

- state
        The desired state.
        (Choices: PROVISIONED, DELETED)[Default: PROVISIONED]
        type: str

- transparentHosts
        optional list of IPv4, IPv6 CIDR to allow. If specified, the terminating endpoint will transparently masquerade as the source address and protocol of the intercepted packet and will ignore serverHosts, serverPorts,
        serverProtocols.
        [Default: (null)]
        type: list

- wait
        seconds to wait for async create
        [Default: 66]
        type: int


REQUIREMENTS:  netfoundry

AUTHOR: Kenneth Bingham (@qrkourier)

METADATA:
  metadata_version: '1.1'
  status:
  - preview
  supported_by: community


VERSION_ADDED_COLLECTION: netfoundry.platform

EXAMPLES:

- name: host a service as a range of server ports
    netfoundry_service_advanced:
        name: Spice Terminal Servers
        attributes:
        - "#workFromAnywhere/"
        clientHostNames:
        - spice-console.example.com # this matches the SSL server certificate
        clientPortRanges:
        - 5900:5999
        endpoints:
        - americas-datacenter-centos12
        - americas-datacenter-centos13
        network: "{{ netfoundry_info.network }}"
# notably, argument `serverHostName` is omitted because the endpoints will use the same address from clientHostNames to reach the server.

  - name: host a service with a round-robin of endpoints
    netfoundry_service_advanced:
        name: SSO Portal
        attributes:
        - "#allEmployees"
        clientHostNames:
        - portal.example.com # this matches the SSL server certificate
        clientPortRanges:
        - 443
        endpoints:
        - americas-datacenter-centos12
        - americas-datacenter-centos13
        serverHosts: portal-load-balancer.internal.example.com
        serverPorts: 1443
        network: "{{ netfoundry_info.network }}"

  - name: Delete all services
    netfoundry_service_advanced:
      name: "{{ item }}"
      state: DELETED
      network: "{{ netfoundry_info.network }}"
    loop: "{{ netfoundry_info.services|map(attribute='name')|list }}"


RETURN VALUES:
- message
        The HTTP response from the create, update, or delete operation.

        returned: always
        type: dict
